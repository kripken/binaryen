;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-ctor-eval %s --ctors=multivalue-local -all -S -o - | filecheck %s

;; XXX auto update fials due to the ctor-eval spam in stdout..?
(module
 ;; CHECK:      (import "a" "b" (func $import))
 (import "a" "b" (func $import))

 (func $multivalue-local (export "multivalue-local") (result i32)
  (local $0 i32)
  (local $1 (i32 i32))

  ;; We can eval this line. But we will stop evalling at the line after it, the
  ;; import call. As a result we'll only have a partial evalling of this
  ;; function, as a result of which it will begin with sets of the values in the
  ;; locals, followed by the import call and the rest
  (local.set $0
   (i32.add        ;; This add will be evalled into 42.
    (i32.const 41)
    (i32.const 1)
   )
  )
  (local.set $1
   (tuple.make
    (local.get $0)   ;; This will turn into 42
    (i32.const 1000)
   )
  )

  ;; We cannot eval this line. When we reach it we serialize out all the locals
  ;; (since we succeeded in a partial eval - the last line evalled ok) which
  ;; includes the multivalue local. We should emit zeros for both its values.
  (call $import)

  ;; Use the locals so they are not trivally removed.
  (i32.add
   (local.get $0)
   (tuple.extract 0
    (local.get $1)
   )
  )
 )
)
