;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.

;; Part of cast-and-recast.wast, but with more operations that cause binary
;; writing, specifically converge (which uses it internally) and -o to binary.
;; We also need to add an actual pass to optimize so that --converge does
;; work, so we add --ssa.

;; RUN: wasm-opt %s -all --ssa --converge --print -o %t.wasm | filecheck %s

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct )))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct )))
    (type $B (sub $A (struct)))
  )

  ;; CHECK:      (func $test (type $2) (param $B (ref $B)) (param $x i32) (result anyref)
  ;; CHECK-NEXT:  (block $out (result (ref $A))
  ;; CHECK-NEXT:   (br_if $out
  ;; CHECK-NEXT:    (local.get $B)
  ;; CHECK-NEXT:    (local.get $x)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $test (param $B (ref $B)) (param $x i32) (result anyref)
    ;; No changes are expected here, and we should not error.
    (block $out (result (ref $A))
      (br_if $out
        (local.get $B)
        (local.get $x)
      )
    )
  )
)
