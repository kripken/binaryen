(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import "env" "memory" (memory $0 256 256))
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (export "stackSave" (func $stackSave))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "__growWasmMemory" (func $__growWasmMemory))
 (func $__wasm_call_ctors (; 0 ;)
  ;; code offset: 0x5
  (nop)
 )
 (func $main (; 1 ;) (param $0 i32) (param $1 i32) (result i32)
  ;; code offset: 0x18
  (if
   ;; code offset: 0x17
   (i32.ne
    ;; code offset: 0x14
    (i32.rem_s
     ;; code offset: 0x9
     (local.get $0)
     ;; code offset: 0x11
     (i32.const 120)
    )
    ;; code offset: 0x15
    (i32.const 55)
   )
   ;; code offset: 0x20
   (loop $label$2
    ;; code offset: 0x48
    (br_if $label$2
     ;; code offset: 0x47
     (i32.ne
      ;; code offset: 0x44
      (i32.rem_s
       ;; code offset: 0x39
       (local.tee $0
        ;; code offset: 0x38
        (i32.add
         ;; code offset: 0x35
         (i32.add
          ;; code offset: 0x29
          (i32.mul
           ;; code offset: 0x26
           (i32.mul
            ;; code offset: 0x22
            (local.get $0)
            ;; code offset: 0x24
            (local.get $0)
           )
           ;; code offset: 0x27
           (local.get $0)
          )
          ;; code offset: 0x34
          (i32.div_s
           ;; code offset: 0x30
           (local.get $0)
           ;; code offset: 0x32
           (i32.const -2)
          )
         )
         ;; code offset: 0x36
         (i32.const 13)
        )
       )
       ;; code offset: 0x41
       (i32.const 120)
      )
      ;; code offset: 0x45
      (i32.const 55)
     )
    )
   )
  )
  ;; code offset: 0x52
  (local.get $0)
 )
 (func $stackSave (; 2 ;) (result i32)
  ;; code offset: 0x57
  (global.get $global$0)
 )
 (func $stackAlloc (; 3 ;) (param $0 i32) (result i32)
  ;; code offset: 0x72
  (global.set $global$0
   ;; code offset: 0x70
   (local.tee $0
    ;; code offset: 0x69
    (i32.and
     ;; code offset: 0x66
     (i32.sub
      ;; code offset: 0x62
      (global.get $global$0)
      ;; code offset: 0x64
      (local.get $0)
     )
     ;; code offset: 0x67
     (i32.const -16)
    )
   )
  )
  ;; code offset: 0x74
  (local.get $0)
 )
 (func $stackRestore (; 4 ;) (param $0 i32)
  ;; code offset: 0x81
  (global.set $global$0
   ;; code offset: 0x79
   (local.get $0)
  )
 )
 (func $__growWasmMemory (; 5 ;) (param $0 i32) (result i32)
  ;; code offset: 0x88
  (memory.grow
   ;; code offset: 0x86
   (local.get $0)
  )
 )
 ;; custom section ".debug_info", size 105
 ;; custom section ".debug_abbrev", size 73
 ;; custom section ".debug_line", size 92
 ;; custom section ".debug_str", size 205
)
(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (import "env" "memory" (memory $0 256 256))
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (export "stackSave" (func $stackSave))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "__growWasmMemory" (func $__growWasmMemory))
 (func $__wasm_call_ctors (; 0 ;)
  ;; code offset: 0x5
  (nop)
 )
 (func $main (; 1 ;) (param $0 i32) (param $1 i32) (result i32)
  ;; code offset: 0x18
  (if
   ;; code offset: 0x17
   (i32.ne
    ;; code offset: 0x14
    (i32.rem_s
     ;; code offset: 0x9
     (local.get $0)
     ;; code offset: 0x11
     (i32.const 120)
    )
    ;; code offset: 0x15
    (i32.const 55)
   )
   ;; code offset: 0x20
   (loop $label$2
    ;; code offset: 0x48
    (br_if $label$2
     ;; code offset: 0x47
     (i32.ne
      ;; code offset: 0x44
      (i32.rem_s
       ;; code offset: 0x39
       (local.tee $0
        ;; code offset: 0x38
        (i32.add
         ;; code offset: 0x35
         (i32.add
          ;; code offset: 0x29
          (i32.mul
           ;; code offset: 0x26
           (i32.mul
            ;; code offset: 0x22
            (local.get $0)
            ;; code offset: 0x24
            (local.get $0)
           )
           ;; code offset: 0x27
           (local.get $0)
          )
          ;; code offset: 0x34
          (i32.div_s
           ;; code offset: 0x30
           (local.get $0)
           ;; code offset: 0x32
           (i32.const -2)
          )
         )
         ;; code offset: 0x36
         (i32.const 13)
        )
       )
       ;; code offset: 0x41
       (i32.const 120)
      )
      ;; code offset: 0x45
      (i32.const 55)
     )
    )
   )
  )
  ;; code offset: 0x52
  (local.get $0)
 )
 (func $stackSave (; 2 ;) (result i32)
  ;; code offset: 0x57
  (global.get $global$0)
 )
 (func $stackAlloc (; 3 ;) (param $0 i32) (result i32)
  ;; code offset: 0x72
  (global.set $global$0
   ;; code offset: 0x70
   (local.tee $0
    ;; code offset: 0x69
    (i32.and
     ;; code offset: 0x66
     (i32.sub
      ;; code offset: 0x62
      (global.get $global$0)
      ;; code offset: 0x64
      (local.get $0)
     )
     ;; code offset: 0x67
     (i32.const -16)
    )
   )
  )
  ;; code offset: 0x74
  (local.get $0)
 )
 (func $stackRestore (; 4 ;) (param $0 i32)
  ;; code offset: 0x81
  (global.set $global$0
   ;; code offset: 0x79
   (local.get $0)
  )
 )
 (func $__growWasmMemory (; 5 ;) (param $0 i32) (result i32)
  ;; code offset: 0x88
  (memory.grow
   ;; code offset: 0x86
   (local.get $0)
  )
 )
 ;; custom section ".debug_info", size 105
 ;; custom section ".debug_abbrev", size 73
 ;; custom section ".debug_line", size 92
 ;; custom section ".debug_str", size 205
)
